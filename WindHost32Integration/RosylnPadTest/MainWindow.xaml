<Window
    x:Class="RoslynPad.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:av="http://schemas.codeplex.com/wpfcontrib/xaml/presentation"
    xmlns:controls="clr-namespace:RoslynPad.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dock="https://github.com/Dirkster99/AvalonDock"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:roslyn="clr-namespace:Microsoft.CodeAnalysis;assembly=Microsoft.CodeAnalysis"
    xmlns:rp="clr-namespace:RoslynPad"
    xmlns:ui="clr-namespace:RoslynPad.UI;assembly=RoslynPad.Common.UI"
    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
    Name="This"
    Title="{Binding WindowTitle, Mode=OneTime}"
    Width="800"
    Height="600"
    d:DataContext="{d:DesignInstance ui:MainViewModel}"
    TextOptions.TextFormattingMode="Display"
    UseLayoutRounding="True"
    mc:Ignorable="d">

    <FrameworkElement.InputBindings>
        <KeyBinding
            Command="{Binding NewDocumentCommand, Mode=OneTime}"
            CommandParameter="{x:Static roslyn:SourceCodeKind.Regular}"
            Gesture="Ctrl+N" />
        <KeyBinding
            Command="{Binding NewDocumentCommand, Mode=OneTime}"
            CommandParameter="{x:Static roslyn:SourceCodeKind.Script}"
            Gesture="Ctrl+Shift+N" />
        <KeyBinding Command="{Binding OpenFileCommand, Mode=OneTime}" Gesture="Ctrl+O" />
        <KeyBinding Command="{Binding CloseCurrentDocumentCommand, Mode=OneTime}" Gesture="Ctrl+W" />
        <KeyBinding Command="{Binding ToggleOptimizationCommand, Mode=OneTime}" Gesture="Ctrl+Shift+O" />
    </FrameworkElement.InputBindings>
    <FrameworkElement.Resources>

        <DataTemplate DataType="{x:Type ui:OpenDocumentViewModel}">
            <rp:DocumentView />
        </DataTemplate>

    </FrameworkElement.Resources>
    <av:InlineModalDecorator Target="{Binding ElementName=This, Mode=OneTime}">
        <DockPanel>
            <Border
                Margin="1"
                Padding="3"
                Background="{DynamicResource {x:Static rp:ThemeDictionary.StatusBarItemErrorBackground}}"
                DockPanel.Dock="Bottom"
                TextBlock.Foreground="{DynamicResource {x:Static rp:ThemeDictionary.StatusBarItemErrorForeground}}"
                Visibility="{Binding HasError, Converter={StaticResource BooleanToVisibilityConverter}}">
                <DockPanel LastChildFill="False">
                    <Button
                        Margin="3"
                        Background="Transparent"
                        Click="ViewErrorDetails_OnClick"
                        Content="View details"
                        DockPanel.Dock="Right" />
                    <Button
                        Margin="3"
                        Background="Transparent"
                        Command="{Binding ClearErrorCommand, Mode=OneTime}"
                        Content=""
                        FontFamily="Segoe UI Symbol" />
                    <TextBlock
                        VerticalAlignment="Center"
                        Text="{Binding LastError.Message}"
                        TextTrimming="CharacterEllipsis" />
                </DockPanel>
            </Border>
            <Grid IsEnabled="{Binding IsInitialized}">
                <xcad:DockingManager
                    Name="DockingManager"
                    ActiveContent="{Binding ActiveContent, Mode=TwoWay}"
                    ActiveContentChanged="DockingManager_ActiveContentChanged"
                    AnchorableContextMenu="{x:Null}"
                    DocumentClosing="DockingManager_OnDocumentClosing"
                    DocumentsSource="{Binding OpenDocuments, Mode=OneTime}">
                    <xcad:DockingManager.DocumentHeaderTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <Run Text="{Binding Content.Title, Mode=OneWay}" />
                                <Run Name="DirtyIndicator" Text="" />
                            </TextBlock>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Content.IsDirty}" Value="True">
                                    <Setter TargetName="DirtyIndicator" Property="Text" Value="*" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </xcad:DockingManager.DocumentHeaderTemplate>
                    <xcad:DockingManager.DocumentPaneMenuItemHeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Content.Title}" />
                        </DataTemplate>
                    </xcad:DockingManager.DocumentPaneMenuItemHeaderTemplate>
                    <xcad:DockingManager.LayoutItemContainerStyle>
                        <Style TargetType="{x:Type xcad:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                        </Style>
                    </xcad:DockingManager.LayoutItemContainerStyle>
                    <xcad:LayoutRoot>
                        <xcad:LayoutPanel Orientation="Horizontal">
                            <xcad:LayoutAnchorablePane Name="Documents" DockWidth="200">
                                <xcad:LayoutAnchorable
                                    x:Name="DocumentsPane"
                                    Title="Documents"
                                    AutoHideWidth="200"
                                    CanAutoHide="True"
                                    CanClose="False"
                                    CanFloat="False"
                                    CanHide="False">
                                    <DockPanel x:Name="DocumentTree">
                                        <AdornerDecorator>
                                            <rp:DocumentTreeView />
                                        </AdornerDecorator>
                                    </DockPanel>
                                </xcad:LayoutAnchorable>
                            </xcad:LayoutAnchorablePane>
                            <xcad:LayoutPanel Orientation="Vertical">
                                <xcad:LayoutDocumentPane />
                                <xcad:LayoutAnchorablePane Name="ResultsPane" DockHeight="250">
                                    <xcad:LayoutAnchorable
                                        x:Name="Results"
                                        Title="Results"
                                        CanAutoHide="True"
                                        CanClose="False"
                                        CanHide="False">
                                        <DockPanel x:Name="ResultsView">
                                            <AdornerDecorator DataContext="{Binding CurrentOpenDocument}">
                                                <rp:ResultsView />
                                            </AdornerDecorator>
                                        </DockPanel>
                                    </xcad:LayoutAnchorable>
                                    <xcad:LayoutAnchorable
                                        x:Name="IL"
                                        Title="IL"
                                        CanAutoHide="True"
                                        CanClose="False"
                                        CanHide="False">
                                        <DockPanel x:Name="ILViewer">
                                            <AdornerDecorator DataContext="{Binding CurrentOpenDocument}">
                                                <controls:ILViewer
                                                    FontSize="{Binding MainViewModel.EditorFontSize}"
                                                    IsVisibleChanged="ILViewer_IsVisibleChanged"
                                                    Text="{Binding ILText}" />
                                            </AdornerDecorator>
                                        </DockPanel>
                                    </xcad:LayoutAnchorable>
                                </xcad:LayoutAnchorablePane>
                            </xcad:LayoutPanel>
                        </xcad:LayoutPanel>
                    </xcad:LayoutRoot>
                </xcad:DockingManager>

                <UniformGrid
                    Margin="0,100,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Rows="1"
                    Visibility="{Binding HasNoOpenDocuments, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <Button
                        Margin="20,0,0,0"
                        Padding="5"
                        Background="Transparent"
                        Command="{Binding NewDocumentCommand}"
                        CommandParameter="{x:Static roslyn:SourceCodeKind.Regular}">
                        <StackPanel>
                            <Image
                                Width="64"
                                Height="64"
                                Source="{StaticResource CsFile}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                Text="New&#xA;(Ctrl+N)"
                                TextAlignment="Center" />
                        </StackPanel>
                    </Button>

                    <Button
                        Margin="20,0,0,0"
                        Padding="5"
                        Background="Transparent"
                        Command="{Binding NewDocumentCommand}"
                        CommandParameter="{x:Static roslyn:SourceCodeKind.Script}">
                        <StackPanel>
                            <Image
                                Width="64"
                                Height="64"
                                Source="{StaticResource CsFile}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                Text="New Script&#xA;(Ctrl+Shift+N)"
                                TextAlignment="Center" />
                        </StackPanel>
                    </Button>

                </UniformGrid>

                <StackPanel
                    Margin="5"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Orientation="Horizontal"
                    TextBlock.Foreground="{DynamicResource {x:Static rp:ThemeDictionary.StatusBarForeground}}">

                    <ToggleButton
                        Margin="20,0,0,0"
                        Background="Transparent"
                        BorderThickness="0"
                        IsChecked="{Binding Settings.OptimizeCompilation}"
                        ToolTipService.Placement="Top">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="ToolTip" Value="Optimization: Off (Ctrl+Shift+O)" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="ToolTip" Value="Optimization: On (Ctrl+Shift+O)" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <Image
                            Width="16"
                            Height="16"
                            Source="{StaticResource Time}" />
                    </ToggleButton>

                    <Button
                        Margin="20,0,0,0"
                        Background="Gold"
                        BorderThickness="0"
                        Click="ViewUpdateClick"
                        Cursor="Hand"
                        ToolTip="Update Available"
                        ToolTipService.Placement="Top"
                        Visibility="{Binding HasUpdate, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image
                                    Width="16"
                                    Height="16"
                                    Source="{StaticResource Update}" />
                                <TextBlock Margin="5,0,0,0">
                                    Update Available
                                </TextBlock>
                            </StackPanel>
                        </Button.Content>
                    </Button>

                    <Image
                        Width="16"
                        Height="16"
                        Margin="20,0,0,0"
                        Source="{StaticResource FontSize}" />
                    <Slider
                        Width="100"
                        Margin="5,0,0,0"
                        IsSnapToTickEnabled="True"
                        LargeChange="10"
                        Maximum="100"
                        Minimum="0"
                        SmallChange="1"
                        TickFrequency="1"
                        ToolTip="Font Size"
                        ToolTipService.Placement="Top"
                        Value="{Binding EditorFontSize}" />
                    <TextBlock Margin="5,0,0,0" Text="{Binding EditorFontSize}" />

                    <Menu Margin="20,0,0,0" Background="Transparent">
                        <MenuItem
                            Padding="0"
                            BorderThickness="0"
                            ToolTip="Send Feedback"
                            ToolTipService.Placement="Top">
                            <MenuItem.Header>
                                <Image
                                    Width="16"
                                    Height="16"
                                    Source="{StaticResource Feedback}" />
                            </MenuItem.Header>
                            <MenuItem
                                Header="Send Telemetry"
                                IsCheckable="True"
                                IsChecked="{Binding SendTelemetry}"
                                ToolTip="Send errors to the author (stack traces of internal RoslynPad errors - not your code)" />
                            <MenuItem Command="{Binding ReportProblemCommand}" Header="Report a problem..." />
                        </MenuItem>
                    </Menu>
                </StackPanel>
            </Grid>
        </DockPanel>
    </av:InlineModalDecorator>
</Window>
